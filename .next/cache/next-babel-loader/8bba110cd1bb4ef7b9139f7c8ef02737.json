{"ast":null,"code":"var _jsxFileName = \"/Users/jakedouglas 1/development/nextJs/cn/components/NewGameButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport randomWords from 'random-words';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nexport default function NewGameButton(_ref) {\n  var solid = _ref.solid,\n      _ref$officialWords = _ref.officialWords,\n      officialWords = _ref$officialWords === void 0 ? true : _ref$officialWords,\n      _ref$setIsCodeMaster = _ref.setIsCodeMaster,\n      setIsCodeMaster = _ref$setIsCodeMaster === void 0 ? null : _ref$setIsCodeMaster,\n      _ref$isGreenMode = _ref.isGreenMode,\n      isGreenMode = _ref$isGreenMode === void 0 ? null : _ref$isGreenMode;\n  console.log('isGreenMode in button: ', isGreenMode);\n\n  var newGame = function newGame() {\n    if (setIsCodeMaster) setIsCodeMaster(false);\n\n    var randomInt = function randomInt(min, max) {\n      return Math.round(min + Math.random() * (max - min));\n    };\n\n    var token = \"\".concat(randomWords(), \"-\").concat(randomWords(), \"-\").concat(randomInt(100, 999));\n    var body = JSON.stringify({\n      token: token,\n      officialWords: officialWords,\n      green: isGreenMode\n    });\n    Router.push(\"/game?token=\".concat(token));\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: body\n    }) // .then(() => Router.push(`/game?token=${token}`))\n    [\"catch\"](function (err) {\n      return console.log('Error adding new game: ', err);\n    })[\"finally\"](function () {\n      return 'Done trying to get new game';\n    });\n  };\n\n  return __jsx(\"button\", {\n    className: solid ? \"btn btn-blue\" : \"bg-transparent hover:bg-gray-200 text-white font-semibold hover:text-black py-2 px-4 border border-white hover:border-transparent rounded\",\n    onClick: newGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"New Game\");\n}","map":{"version":3,"sources":["/Users/jakedouglas 1/development/nextJs/cn/components/NewGameButton.js"],"names":["randomWords","fetch","Router","NewGameButton","solid","officialWords","setIsCodeMaster","isGreenMode","console","log","newGame","randomInt","min","max","Math","round","random","token","body","JSON","stringify","green","push","method","headers","err"],"mappings":";;;AACA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,eAAe,SAASC,aAAT,OAAoG;AAAA,MAA3EC,KAA2E,QAA3EA,KAA2E;AAAA,gCAApEC,aAAoE;AAAA,MAApEA,aAAoE,mCAApD,IAAoD;AAAA,kCAA9CC,eAA8C;AAAA,MAA9CA,eAA8C,qCAA5B,IAA4B;AAAA,8BAAtBC,WAAsB;AAAA,MAAtBA,WAAsB,iCAAR,IAAQ;AACjHC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,WAAvC;;AACA,MAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAIJ,eAAJ,EAAqBA,eAAe,CAAC,KAAD,CAAf;;AACrB,QAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC9B,aAAOC,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAIE,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAlB,CAAP;AACD,KAFD;;AAGA,QAAMK,KAAK,aAAMjB,WAAW,EAAjB,cAAuBA,WAAW,EAAlC,cAAwCW,SAAS,CAAC,GAAD,EAAM,GAAN,CAAjD,CAAX;AACA,QAAMO,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BH,MAAAA,KAAK,EAALA,KAD0B;AAE1BZ,MAAAA,aAAa,EAAbA,aAF0B;AAG1BgB,MAAAA,KAAK,EAAEd;AAHmB,KAAf,CAAb;AAKAL,IAAAA,MAAM,CAACoB,IAAP,uBAA2BL,KAA3B;AACAhB,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBsB,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFS;AAKlBN,MAAAA,IAAI,EAAJA;AALkB,KAAf,CAAL,CAOE;AAPF,cAQS,UAAAO,GAAG;AAAA,aAAIjB,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCgB,GAAvC,CAAJ;AAAA,KARZ,aASW;AAAA,aAAM,6BAAN;AAAA,KATX;AAUD,GAtBD;;AAuBA,SACE;AAAQ,IAAA,SAAS,EAAErB,KAAK,GAAG,cAAH,GAAoB,2IAA5C;AAAyL,IAAA,OAAO,EAAEM,OAAlM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD","sourcesContent":["\nimport randomWords from 'random-words'\nimport fetch from 'isomorphic-unfetch'\nimport Router from 'next/router'\n\nexport default function NewGameButton({ solid, officialWords = true, setIsCodeMaster = null, isGreenMode = null }) {\n  console.log('isGreenMode in button: ', isGreenMode);\n  const newGame = () => {\n    if (setIsCodeMaster) setIsCodeMaster(false);\n    const randomInt = (min, max) => {\n      return Math.round(min + (Math.random() * (max - min)));\n    };\n    const token = `${randomWords()}-${randomWords()}-${randomInt(100, 999)}`;\n    const body = JSON.stringify({\n      token,\n      officialWords,\n      green: isGreenMode,\n    })\n    Router.push(`/game?token=${token}`);\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body,\n    })\n      // .then(() => Router.push(`/game?token=${token}`))\n      .catch(err => console.log('Error adding new game: ', err))\n      .finally(() => 'Done trying to get new game')\n  }\n  return (\n    <button className={solid ? \"btn btn-blue\" : \"bg-transparent hover:bg-gray-200 text-white font-semibold hover:text-black py-2 px-4 border border-white hover:border-transparent rounded\"} onClick={newGame}>\n      New Game\n    </button>\n  )\n}"]},"metadata":{},"sourceType":"module"}