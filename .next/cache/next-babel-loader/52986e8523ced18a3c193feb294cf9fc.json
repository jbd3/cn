{"ast":null,"code":"var _jsxFileName = \"/Users/jakedouglas 1/development/nextJs/cn/components/NewGameButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport randomWords from 'random-words';\nimport Router from 'next/router';\nexport default function NewGameButton() {\n  var newGame = function newGame(_ref) {\n    var _ref$firstPlayer = _ref.firstPlayer,\n        firstPlayer = _ref$firstPlayer === void 0 ? null : _ref$firstPlayer,\n        _ref$officialWords = _ref.officialWords,\n        officialWords = _ref$officialWords === void 0 ? true : _ref$officialWords;\n\n    var randomInt = function randomInt(min, max) {\n      return Math.round(min + Math.random() * (max - min));\n    };\n\n    var token = \"\".concat(randomWords(), \"-\").concat(randomWords(), \"-\").concat(randomInt(100, 999));\n    console.log('token: ', token);\n    var body = JSON.stringify({\n      token: token,\n      officialWords: officialWords\n    });\n    console.log('body: ', body);\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: body\n    }).then(function (res) {\n      res.json();\n    }).then(function (data) {\n      return data;\n    }).then(function () {\n      return Router.push(\"/game?token=\".concat(JSON.stringify(token)));\n    })[\"catch\"](function (err) {\n      return console.error('Error adding new game');\n    });\n  };\n\n  return __jsx(\"button\", {\n    className: \"btn btn-blue\",\n    onClick: newGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"New Game\");\n}","map":{"version":3,"sources":["/Users/jakedouglas 1/development/nextJs/cn/components/NewGameButton.js"],"names":["randomWords","Router","NewGameButton","newGame","firstPlayer","officialWords","randomInt","min","max","Math","round","random","token","console","log","body","JSON","stringify","fetch","method","headers","then","res","json","data","push","err","error"],"mappings":";;;AACA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,MAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkD;AAAA,gCAA/CC,WAA+C;AAAA,QAA/CA,WAA+C,iCAAjC,IAAiC;AAAA,kCAA3BC,aAA2B;AAAA,QAA3BA,aAA2B,mCAAX,IAAW;;AAChE,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC9B,aAAOC,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAIE,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAlB,CAAP;AACD,KAFD;;AAGA,QAAMK,KAAK,aAAMZ,WAAW,EAAjB,cAAuBA,WAAW,EAAlC,cAAwCM,SAAS,CAAC,GAAD,EAAM,GAAN,CAAjD,CAAX;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,QAAMG,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BL,MAAAA,KAAK,EAALA,KAD0B;AAE1BP,MAAAA,aAAa,EAAbA;AAF0B,KAAf,CAAb;AAIAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,IAAtB;AACAG,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFS;AAKlBL,MAAAA,IAAI,EAAJA;AALkB,KAAf,CAAL,CAOGM,IAPH,CAOQ,UAAAC,GAAG,EAAI;AACXA,MAAAA,GAAG,CAACC,IAAJ;AACD,KATH,EAUGF,IAVH,CAUQ,UAACG,IAAD;AAAA,aAAUA,IAAV;AAAA,KAVR,EAWGH,IAXH,CAWQ;AAAA,aAAMpB,MAAM,CAACwB,IAAP,uBAA2BT,IAAI,CAACC,SAAL,CAAeL,KAAf,CAA3B,EAAN;AAAA,KAXR,WAYS,UAAAc,GAAG;AAAA,aAAIb,OAAO,CAACc,KAAR,CAAc,uBAAd,CAAJ;AAAA,KAZZ;AAaD,GAxBD;;AAyBA,SACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAExB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD","sourcesContent":["\nimport randomWords from 'random-words'\nimport Router from 'next/router'\n\nexport default function NewGameButton() {\n  const newGame = ({ firstPlayer = null, officialWords = true }) => {\n    const randomInt = (min, max) => {\n      return Math.round(min + (Math.random() * (max - min)));\n    };\n    const token = `${randomWords()}-${randomWords()}-${randomInt(100, 999)}`;\n    console.log('token: ', token);\n    const body = JSON.stringify({\n      token,\n      officialWords,\n    })\n    console.log('body: ', body);\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body,\n    })\n      .then(res => {\n        res.json()\n      })\n      .then((data) => data)\n      .then(() => Router.push(`/game?token=${JSON.stringify(token)}`))\n      .catch(err => console.error('Error adding new game'))\n  }\n  return (\n    <button className=\"btn btn-blue\" onClick={newGame}>\n      New Game\n    </button>\n  )\n}"]},"metadata":{},"sourceType":"module"}