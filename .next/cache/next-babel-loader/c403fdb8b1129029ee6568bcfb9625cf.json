{"ast":null,"code":"var _jsxFileName = \"/Users/jakedouglas 1/development/nextJs/cn/components/BoardContainer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport Board from './Board';\nimport Toggle from '../components/Toggle';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  var _boardMap;\n\n  const {\n    query\n  } = useRouter();\n  const {\n    token\n  } = query;\n  const {\n    data,\n    error\n  } = useSWR(`/api/games?token=${token}`, fetcher, {\n    refreshInterval: 100\n  }); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  let boardMap = data === null || data === void 0 ? void 0 : data.boardMap;\n  let scoreBoard = data === null || data === void 0 ? void 0 : data.scoreBoard;\n  const loading = !boardMap;\n  if (error) boardMap = 'Failed to fetch game data.';\n  const {\n    0: isCodeMaster,\n    1: setIsCodeMaster\n  } = useState(false);\n\n  const revealCard = (x, y) => {\n    if (boardMap[x][y].team !== scoreBoard.turn) {\n      scoreBoard.turn = scoreBoard;\n    }\n\n    fetch('/api/games', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token,\n        x,\n        y\n      })\n    });\n  };\n\n  const copyToClipboard = () => {\n    const el = document.createElement('textarea');\n    el.value = document.location.href;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  const cardsRemaining = {\n    red: 0,\n    blue: 0\n  };\n\n  if ((_boardMap = boardMap) === null || _boardMap === void 0 ? void 0 : _boardMap.length) {\n    boardMap.forEach(row => {\n      row.forEach(card => {\n        if (card.team === 1 && !card.isRevealed) {\n          cardsRemaining.red++;\n        }\n\n        if (card.team === 2 && !card.isRevealed) {\n          cardsRemaining.blue++;\n        }\n      });\n    });\n  }\n\n  return __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, loading && \"Loading...\", boardMap && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"link-container\",\n    onClick: () => copyToClipboard(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-2 token-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"flex bg-gray-100 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\",\n    type: \"text\",\n    value: `${document.location.href}`,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), __jsx(\"button\", {\n    className: \"btn-teal\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Copy Link\")))), __jsx(\"div\", {\n    className: \"toggleContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(Toggle, {\n    text: \"Codemaster\",\n    onToggle: () => setIsCodeMaster(!isCodeMaster),\n    checked: isCodeMaster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"scoreBoard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"turn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, !(scoreBoard === null || scoreBoard === void 0 ? void 0 : scoreBoard.gameOver) && `${(scoreBoard === null || scoreBoard === void 0 ? void 0 : scoreBoard.turn) === 1 ? \"Red's turn\" : \"Blue's turn\"}`, (scoreBoard === null || scoreBoard === void 0 ? void 0 : scoreBoard.gameOver) && \"Game Over!\"), __jsx(\"div\", {\n    className: \"score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Blue Cards Remaining: \", `${cardsRemaining.blue}`), __jsx(\"div\", {\n    className: \"score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Red Cards Remaining: \", `${cardsRemaining.red}`)), __jsx(Board, {\n    boardMap: boardMap,\n    isCodeMaster: isCodeMaster,\n    revealCard: revealCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), __jsx(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, `\n        .scoreBoard {\n          display: flex;\n          align-content: space-between;\n          align-self: center;\n        }\n        .score {\n          margin: 0 10px;\n          color: white;\n        }\n        main {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .toggleContainer {\n          width: 160px;\n          align-self: center;\n          margin: 20px 0;\n        }\n        .link-container {\n          width: 98vw;\n          max-width: 400px;\n          align-self: center;\n          font-size: 10px;\n          margin: 20px 0;\n        }\n      `));\n}","map":{"version":3,"sources":["/Users/jakedouglas 1/development/nextJs/cn/components/BoardContainer.js"],"names":["useSWR","fetch","useRouter","useState","Board","Toggle","fetcher","url","then","r","json","Index","query","token","data","error","refreshInterval","boardMap","scoreBoard","loading","isCodeMaster","setIsCodeMaster","revealCard","x","y","team","turn","method","headers","body","JSON","stringify","copyToClipboard","el","document","createElement","value","location","href","appendChild","select","execCommand","removeChild","cardsRemaining","red","blue","length","forEach","row","card","isRevealed","gameOver"],"mappings":"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","sourcesContent":["import useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch'\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport Board from './Board';\nimport Toggle from '../components/Toggle'\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const { query } = useRouter();\n  const { token } = query;\n  const { data, error } = useSWR(`/api/games?token=${token}`, fetcher, { refreshInterval: 100 });\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n  let boardMap = data?.boardMap;\n  let scoreBoard = data?.scoreBoard;\n  const loading = !boardMap;\n  if (error) boardMap = 'Failed to fetch game data.';\n\n  const [isCodeMaster, setIsCodeMaster] = useState(false);\n\n  const revealCard = (x, y) => {\n    if (boardMap[x][y].team !== scoreBoard.turn) {\n      scoreBoard.turn = scoreBoard\n    }\n    fetch('/api/games', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ token, x, y }),\n    })\n  }\n\n  const copyToClipboard = () => {\n    const el = document.createElement('textarea');\n    el.value = document.location.href;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  const cardsRemaining = {\n    red: 0,\n    blue: 0,\n  };\n  if (boardMap?.length) {\n    boardMap.forEach(row => {\n      row.forEach(card => {\n        if (card.team === 1 && !card.isRevealed) {\n          cardsRemaining.red++\n        }\n        if (card.team === 2 && !card.isRevealed) {\n          cardsRemaining.blue++\n        }\n      })\n    })\n  }\n\n  return (\n    <main>\n      {loading && \"Loading...\"}\n      {boardMap && (<>\n        <div className=\"link-container\" onClick={() => copyToClipboard()}>\n          <div className=\"mb-2 token-form\">\n            <div className=\"flex bg-gray-100 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\n              <input className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" value={`${document.location.href}`} disabled />\n              <button className=\"btn-teal\" type=\"button\">\n                Copy Link\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className='toggleContainer'>\n          <Toggle text='Codemaster' onToggle={() => setIsCodeMaster(!isCodeMaster)} checked={isCodeMaster} />\n        </div>\n        <div className=\"scoreBoard\">\n          <div className=\"turn\">\n            {!scoreBoard?.gameOver && `${scoreBoard?.turn === 1 ? \"Red's turn\" : \"Blue's turn\"}`}\n            {scoreBoard?.gameOver && \"Game Over!\"}\n          </div>\n          <div className=\"score\">\n            Blue Cards Remaining: {`${cardsRemaining.blue}`}\n          </div>\n          <div className=\"score\">\n            Red Cards Remaining: {`${cardsRemaining.red}`}\n          </div>\n        </div>\n        <Board boardMap={boardMap} isCodeMaster={isCodeMaster} revealCard={revealCard} />\n      </>)}\n      <style>{`\n        .scoreBoard {\n          display: flex;\n          align-content: space-between;\n          align-self: center;\n        }\n        .score {\n          margin: 0 10px;\n          color: white;\n        }\n        main {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .toggleContainer {\n          width: 160px;\n          align-self: center;\n          margin: 20px 0;\n        }\n        .link-container {\n          width: 98vw;\n          max-width: 400px;\n          align-self: center;\n          font-size: 10px;\n          margin: 20px 0;\n        }\n      `}</style>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}