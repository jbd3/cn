{"ast":null,"code":"var _jsxFileName = \"/Users/jakedouglas 1/development/nextJs/cn/components/NewGameButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport randomWords from 'random-words';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nexport default function NewGameButton(_ref) {\n  var solid = _ref.solid,\n      _ref$officialWords = _ref.officialWords,\n      officialWords = _ref$officialWords === void 0 ? true : _ref$officialWords,\n      setIsCodeMaster = _ref.setIsCodeMaster;\n  setIsCodeMaster(false);\n\n  var newGame = function newGame(_ref2) {\n    var _ref2$firstPlayer = _ref2.firstPlayer,\n        firstPlayer = _ref2$firstPlayer === void 0 ? null : _ref2$firstPlayer;\n\n    var randomInt = function randomInt(min, max) {\n      return Math.round(min + Math.random() * (max - min));\n    };\n\n    var token = \"\".concat(randomWords(), \"-\").concat(randomWords(), \"-\").concat(randomInt(100, 999));\n    var body = JSON.stringify({\n      token: token,\n      officialWords: officialWords\n    });\n    Router.push(\"/game?token=\".concat(token));\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: body\n    }) // .then(() => Router.push(`/game?token=${token}`))\n    [\"catch\"](function (err) {\n      return console.log('Error adding new game: ', err);\n    })[\"finally\"](function () {\n      return 'Done trying to get new game';\n    });\n  };\n\n  return __jsx(\"button\", {\n    className: solid ? \"btn btn-blue\" : \"bg-transparent hover:bg-gray-200 text-white font-semibold hover:text-black py-2 px-4 border border-white hover:border-transparent rounded\",\n    onClick: newGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"New Game\");\n}","map":{"version":3,"sources":["/Users/jakedouglas 1/development/nextJs/cn/components/NewGameButton.js"],"names":["randomWords","fetch","Router","NewGameButton","solid","officialWords","setIsCodeMaster","newGame","firstPlayer","randomInt","min","max","Math","round","random","token","body","JSON","stringify","push","method","headers","err","console","log"],"mappings":";;;AACA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,eAAe,SAASC,aAAT,OAAyE;AAAA,MAAhDC,KAAgD,QAAhDA,KAAgD;AAAA,gCAAzCC,aAAyC;AAAA,MAAzCA,aAAyC,mCAAzB,IAAyB;AAAA,MAAnBC,eAAmB,QAAnBA,eAAmB;AACtFA,EAAAA,eAAe,CAAC,KAAD,CAAf;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU,QAA4B;AAAA,kCAAzBC,WAAyB;AAAA,QAAzBA,WAAyB,kCAAX,IAAW;;AAC1C,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC9B,aAAOC,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAIE,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAlB,CAAP;AACD,KAFD;;AAGA,QAAMK,KAAK,aAAMf,WAAW,EAAjB,cAAuBA,WAAW,EAAlC,cAAwCS,SAAS,CAAC,GAAD,EAAM,GAAN,CAAjD,CAAX;AACA,QAAMO,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BH,MAAAA,KAAK,EAALA,KAD0B;AAE1BV,MAAAA,aAAa,EAAbA;AAF0B,KAAf,CAAb;AAIAH,IAAAA,MAAM,CAACiB,IAAP,uBAA2BJ,KAA3B;AACAd,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBmB,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFS;AAKlBL,MAAAA,IAAI,EAAJA;AALkB,KAAf,CAAL,CAOE;AAPF,cAQS,UAAAM,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,GAAvC,CAAJ;AAAA,KARZ,aASW;AAAA,aAAM,6BAAN;AAAA,KATX;AAUD,GApBD;;AAqBA,SACE;AAAQ,IAAA,SAAS,EAAElB,KAAK,GAAG,cAAH,GAAoB,2IAA5C;AAAyL,IAAA,OAAO,EAAEG,OAAlM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD","sourcesContent":["\nimport randomWords from 'random-words'\nimport fetch from 'isomorphic-unfetch'\nimport Router from 'next/router'\n\nexport default function NewGameButton({ solid, officialWords = true, setIsCodeMaster }) {\n  setIsCodeMaster(false);\n  const newGame = ({ firstPlayer = null }) => {\n    const randomInt = (min, max) => {\n      return Math.round(min + (Math.random() * (max - min)));\n    };\n    const token = `${randomWords()}-${randomWords()}-${randomInt(100, 999)}`;\n    const body = JSON.stringify({\n      token,\n      officialWords,\n    })\n    Router.push(`/game?token=${token}`);\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body,\n    })\n      // .then(() => Router.push(`/game?token=${token}`))\n      .catch(err => console.log('Error adding new game: ', err))\n      .finally(() => 'Done trying to get new game')\n  }\n  return (\n    <button className={solid ? \"btn btn-blue\" : \"bg-transparent hover:bg-gray-200 text-white font-semibold hover:text-black py-2 px-4 border border-white hover:border-transparent rounded\"} onClick={newGame}>\n      New Game\n    </button>\n  )\n}"]},"metadata":{},"sourceType":"module"}