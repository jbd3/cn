{"ast":null,"code":"var _jsxFileName = \"/Users/jakedouglas 1/development/nextJs/cn/components/BoardContainer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport Board from './Board';\nimport Toggle from '../components/Toggle';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    query\n  } = useRouter();\n  const {\n    token\n  } = query;\n  const {\n    data,\n    error\n  } = useSWR(`/api/games?token=${token}`, fetcher); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  let boardMap = data === null || data === void 0 ? void 0 : data.boardMap;\n  const loading = !boardMap;\n  if (error) boardMap = 'Failed to fetch game data.';\n  const {\n    0: isCodemaster,\n    1: setIsCodemaster\n  } = useState(false);\n  return __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, loading && \"Loading...\", boardMap && __jsx(React.Fragment, null, __jsx(Toggle, {\n    text: \"Codemaster\",\n    onToggle: () => setIsCodemaster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"URL: \", `${token}`), __jsx(Board, {\n    boardMap: boardMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/jakedouglas 1/development/nextJs/cn/components/BoardContainer.js"],"names":["useSWR","useRouter","useState","Board","Toggle","fetcher","url","fetch","then","r","json","Index","query","token","data","error","boardMap","loading","isCodemaster","setIsCodemaster"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAYX,SAAS,EAA3B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAYD,KAAlB;AACA,QAAM;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBf,MAAM,CAAE,oBAAmBa,KAAM,EAA3B,EAA8BR,OAA9B,CAA9B,CAH8B,CAI9B;AACA;;AACA,MAAIW,QAAQ,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,QAArB;AACA,QAAMC,OAAO,GAAG,CAACD,QAAjB;AACA,MAAID,KAAJ,EAAWC,QAAQ,GAAG,4BAAX;AAEX,QAAM;AAAA,OAACE,YAAD;AAAA,OAAeC;AAAf,MAAkCjB,QAAQ,CAAC,KAAD,CAAhD;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,OAAO,IAAI,YADd,EAEGD,QAAQ,IAAK,4BACZ,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,YAAb;AAA0B,IAAA,QAAQ,EAAE,MAAMG,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,EAEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAY,GAAEN,KAAM,EAApB,CAFY,EAGZ,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAEG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHY,CAFhB,CADF;AAUD","sourcesContent":["import useSWR from 'swr';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport Board from './Board';\nimport Toggle from '../components/Toggle'\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const { query } = useRouter();\n  const { token } = query;\n  const { data, error } = useSWR(`/api/games?token=${token}`, fetcher);\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n  let boardMap = data?.boardMap;\n  const loading = !boardMap;\n  if (error) boardMap = 'Failed to fetch game data.';\n\n  const [isCodemaster, setIsCodemaster] = useState(false);\n\n  return (\n    <main>\n      {loading && \"Loading...\"}\n      {boardMap && (<>\n        <Toggle text='Codemaster' onToggle={() => setIsCodemaster} />\n        <div>URL: {`${token}`}</div>\n        <Board boardMap={boardMap} />\n      </>)}\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}