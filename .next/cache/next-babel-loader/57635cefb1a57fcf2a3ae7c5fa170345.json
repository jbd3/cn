{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jakedouglas 1/development/nextJs/cn/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport '../styles/index.css';\nexport default function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var newGame = function newGame(_ref2) {\n    var _ref2$firstPlayer = _ref2.firstPlayer,\n        firstPlayer = _ref2$firstPlayer === void 0 ? null : _ref2$firstPlayer,\n        _ref2$officialWords = _ref2.officialWords,\n        officialWords = _ref2$officialWords === void 0 ? true : _ref2$officialWords;\n\n    var randomInt = function randomInt(min, max) {\n      return Math.round(min + Math.random() * (max - min));\n    };\n\n    var token = \"\".concat(randomWords(), \"-\").concat(randomWords(), \"-\").concat(randomInt(100, 999));\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token: token,\n        officialWords: officialWords\n      })\n    }).then(function (res) {\n      console.log('response: ', res);\n      res.json();\n    }).then(function (data) {\n      return data;\n    }).then(function () {\n      return Router.push(\"/game?token=\".concat(token));\n    })[\"catch\"](function (err) {\n      return console.error('Error adding new game');\n    });\n  };\n\n  console.log(typeof pageProps);\n  console.log(pageProps.newGame = newGame);\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/jakedouglas 1/development/nextJs/cn/pages/_app.js"],"names":["MyApp","Component","pageProps","newGame","firstPlayer","officialWords","randomInt","min","max","Math","round","random","token","randomWords","fetch","method","headers","body","JSON","stringify","then","res","console","log","json","data","Router","push","err","error"],"mappings":";;;;AAAA,OAAO,qBAAP;AAEA,eAAe,SAASA,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAEtD,MAAMC,OAAO,GAAG,SAAVA,OAAU,QAAkD;AAAA,kCAA/CC,WAA+C;AAAA,QAA/CA,WAA+C,kCAAjC,IAAiC;AAAA,oCAA3BC,aAA2B;AAAA,QAA3BA,aAA2B,oCAAX,IAAW;;AAChE,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC9B,aAAOC,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAIE,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAlB,CAAP;AACD,KAFD;;AAGA,QAAMK,KAAK,aAAMC,WAAW,EAAjB,cAAuBA,WAAW,EAAlC,cAAwCP,SAAS,CAAC,GAAD,EAAM,GAAN,CAAjD,CAAX;AACAQ,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFS;AAKlBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,QAAAA,KAAK,EAALA,KADmB;AAEnBP,QAAAA,aAAa,EAAbA;AAFmB,OAAf;AALY,KAAf,CAAL,CAUGe,IAVH,CAUQ,UAAAC,GAAG,EAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACAA,MAAAA,GAAG,CAACG,IAAJ;AACD,KAbH,EAcGJ,IAdH,CAcQ,UAACK,IAAD;AAAA,aAAUA,IAAV;AAAA,KAdR,EAeGL,IAfH,CAeQ;AAAA,aAAMM,MAAM,CAACC,IAAP,uBAA2Bf,KAA3B,EAAN;AAAA,KAfR,WAgBS,UAAAgB,GAAG;AAAA,aAAIN,OAAO,CAACO,KAAR,CAAc,uBAAd,CAAJ;AAAA,KAhBZ;AAiBD,GAtBD;;AAwBAP,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOrB,SAAnB;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYrB,SAAS,CAACC,OAAV,GAAoBA,OAAhC;AAEA,SAAO,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import '../styles/index.css'\n\nexport default function MyApp({ Component, pageProps }) {\n\n  const newGame = ({ firstPlayer = null, officialWords = true }) => {\n    const randomInt = (min, max) => {\n      return Math.round(min + (Math.random() * (max - min)));\n    };\n    const token = `${randomWords()}-${randomWords()}-${randomInt(100, 999)}`;\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token,\n        officialWords,\n      }),\n    })\n      .then(res => {\n        console.log('response: ', res);\n        res.json()\n      })\n      .then((data) => data)\n      .then(() => Router.push(`/game?token=${token}`))\n      .catch(err => console.error('Error adding new game'))\n  }\n\n  console.log(typeof pageProps);\n  console.log(pageProps.newGame = newGame);\n\n  return <Component {...pageProps} />\n}"]},"metadata":{},"sourceType":"module"}