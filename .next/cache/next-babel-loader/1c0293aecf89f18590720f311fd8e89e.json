{"ast":null,"code":"var _jsxFileName = \"/Users/jakedouglas 1/development/nextJs/cn/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Toggle from '../components/Toggle';\nimport randomWords from 'random-words';\nimport Router from 'next/router';\nimport { useState } from 'react';\nexport default function Index() {\n  const {\n    0: officialWords,\n    1: setOfficialWords\n  } = useState(true);\n\n  const newGame = ({\n    firstPlayer = null,\n    officialWords = true\n  }) => {\n    const randomInt = (min, max) => {\n      return Math.round(min + Math.random() * (max - min));\n    };\n\n    const token = `${randomWords()}-${randomWords()}-${randomInt(100, 999)}`;\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token,\n        officialWords\n      })\n    }).then(res => {\n      console.log('response: ', res);\n      res.json();\n    }).then(data => data).then(() => Router.push(`/game?token=${token}`)).catch(err => console.error('Error adding new game'));\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"main\", {\n    className: \"jsx-461382001\" + \" \" + \"self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Toggle, {\n    text: 'Use official words',\n    onToggle: () => setOfficialWords(!officialWords),\n    checked: officialWords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: newGame,\n    className: \"jsx-461382001\" + \" \" + \"btn btn-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"New Game\"), __jsx(\"div\", {\n    className: \"jsx-461382001\" + \" \" + \"self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"HomePage What\"), __jsx(_JSXStyle, {\n    id: \"461382001\",\n    __self: this\n  }, \"@font-face{font-family:'Open Sans',sans-serif;src:url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');font-weight:bold;font-style:normal;font-display:swap;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWtlZG91Z2xhcyAxL2RldmVsb3BtZW50L25leHRKcy9jbi9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QzJCLEFBR21ELG1DQUNzQywwRUFDekQsaUJBQ0Msa0JBQ0Esa0JBQ3BCIiwiZmlsZSI6Ii9Vc2Vycy9qYWtlZG91Z2xhcyAxL2RldmVsb3BtZW50L25leHRKcy9jbi9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCdcbmltcG9ydCBUb2dnbGUgZnJvbSAnLi4vY29tcG9uZW50cy9Ub2dnbGUnXG5pbXBvcnQgcmFuZG9tV29yZHMgZnJvbSAncmFuZG9tLXdvcmRzJztcbmltcG9ydCBSb3V0ZXIgZnJvbSAnbmV4dC9yb3V0ZXInXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG5cbiAgY29uc3QgW29mZmljaWFsV29yZHMsIHNldE9mZmljaWFsV29yZHNdID0gdXNlU3RhdGUodHJ1ZSk7XG5cbiAgY29uc3QgbmV3R2FtZSA9ICh7IGZpcnN0UGxheWVyID0gbnVsbCwgb2ZmaWNpYWxXb3JkcyA9IHRydWUgfSkgPT4ge1xuICAgIGNvbnN0IHJhbmRvbUludCA9IChtaW4sIG1heCkgPT4ge1xuICAgICAgcmV0dXJuIE1hdGgucm91bmQobWluICsgKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSkpO1xuICAgIH07XG4gICAgY29uc3QgdG9rZW4gPSBgJHtyYW5kb21Xb3JkcygpfS0ke3JhbmRvbVdvcmRzKCl9LSR7cmFuZG9tSW50KDEwMCwgOTk5KX1gO1xuICAgIGZldGNoKCcvYXBpL2dhbWVzJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHRva2VuLFxuICAgICAgICBvZmZpY2lhbFdvcmRzLFxuICAgICAgfSksXG4gICAgfSlcbiAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdyZXNwb25zZTogJywgcmVzKTtcbiAgICAgICAgcmVzLmpzb24oKVxuICAgICAgfSlcbiAgICAgIC50aGVuKChkYXRhKSA9PiBkYXRhKVxuICAgICAgLnRoZW4oKCkgPT4gUm91dGVyLnB1c2goYC9nYW1lP3Rva2VuPSR7dG9rZW59YCkpXG4gICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFkZGluZyBuZXcgZ2FtZScpKVxuICB9XG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIDxtYWluIGNsYXNzTmFtZT1cInNlbGYtY2VudGVyXCI+XG4gICAgICAgIDxUb2dnbGUgdGV4dD17J1VzZSBvZmZpY2lhbCB3b3Jkcyd9IG9uVG9nZ2xlPXsoKSA9PiBzZXRPZmZpY2lhbFdvcmRzKCFvZmZpY2lhbFdvcmRzKX0gY2hlY2tlZD17b2ZmaWNpYWxXb3Jkc30gLz5cbiAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLWJsdWVcIiBvbkNsaWNrPXtuZXdHYW1lfT5cbiAgICAgICAgICBOZXcgR2FtZVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZWxmLWNlbnRlclwiPkhvbWVQYWdlIFdoYXQ8L2Rpdj5cbiAgICAgICAgey8qIHtib2FyZE1hcCAmJiA8c3BhbiBjbGFzc05hbWU9XCJhdXRob3JcIj4tIHtib2FyZE1hcH08L3NwYW4+fSAqL31cblxuICAgICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICAgICAgQGZvbnQtZmFjZSB7XG4gICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgICAgc3JjOiB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnMmZGlzcGxheT1zd2FwJyk7XG4gICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgICAgIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgICAgICAgICAgIH1gXG5cbiAgICAgICAgfVxuICAgICAgICA8L3N0eWxlPlxuICAgICAgPC9tYWluPlxuICAgIDwvTGF5b3V0PlxuICApO1xufVxuIl19 */\\n/*@ sourceURL=/Users/jakedouglas 1/development/nextJs/cn/pages/index.js */\")));\n}","map":{"version":3,"sources":["/Users/jakedouglas 1/development/nextJs/cn/pages/index.js"],"names":["Layout","Toggle","randomWords","Router","useState","Index","officialWords","setOfficialWords","newGame","firstPlayer","randomInt","min","max","Math","round","random","token","fetch","method","headers","body","JSON","stringify","then","res","console","log","json","data","push","catch","err","error"],"mappings":";;;;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAE9B,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCH,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMI,OAAO,GAAG,CAAC;AAAEC,IAAAA,WAAW,GAAG,IAAhB;AAAsBH,IAAAA,aAAa,GAAG;AAAtC,GAAD,KAAkD;AAChE,UAAMI,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9B,aAAOC,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAIE,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAlB,CAAP;AACD,KAFD;;AAGA,UAAMK,KAAK,GAAI,GAAEd,WAAW,EAAG,IAAGA,WAAW,EAAG,IAAGQ,SAAS,CAAC,GAAD,EAAM,GAAN,CAAW,EAAvE;AACAO,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFS;AAKlBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,QAAAA,KADmB;AAEnBV,QAAAA;AAFmB,OAAf;AALY,KAAf,CAAL,CAUGiB,IAVH,CAUQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACAA,MAAAA,GAAG,CAACG,IAAJ;AACD,KAbH,EAcGJ,IAdH,CAcSK,IAAD,IAAUA,IAdlB,EAeGL,IAfH,CAeQ,MAAMpB,MAAM,CAAC0B,IAAP,CAAa,eAAcb,KAAM,EAAjC,CAfd,EAgBGc,KAhBH,CAgBSC,GAAG,IAAIN,OAAO,CAACO,KAAR,CAAc,uBAAd,CAhBhB;AAiBD,GAtBD;;AAuBA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,uCAAgB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,oBAAd;AAAoC,IAAA,QAAQ,EAAE,MAAMzB,gBAAgB,CAAC,CAACD,aAAF,CAApE;AAAsF,IAAA,OAAO,EAAEA,aAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAiC,IAAA,OAAO,EAAEE,OAA1C;AAAA,uCAAkB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKE;AAAA,uCAAe,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF;AAAA;AAAA;AAAA,4hGADF,CADF;AAwBD","sourcesContent":["\nimport Layout from '../components/Layout'\nimport Toggle from '../components/Toggle'\nimport randomWords from 'random-words';\nimport Router from 'next/router'\nimport { useState } from 'react';\n\nexport default function Index() {\n\n  const [officialWords, setOfficialWords] = useState(true);\n\n  const newGame = ({ firstPlayer = null, officialWords = true }) => {\n    const randomInt = (min, max) => {\n      return Math.round(min + (Math.random() * (max - min)));\n    };\n    const token = `${randomWords()}-${randomWords()}-${randomInt(100, 999)}`;\n    fetch('/api/games', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token,\n        officialWords,\n      }),\n    })\n      .then(res => {\n        console.log('response: ', res);\n        res.json()\n      })\n      .then((data) => data)\n      .then(() => Router.push(`/game?token=${token}`))\n      .catch(err => console.error('Error adding new game'))\n  }\n  return (\n    <Layout>\n      <main className=\"self-center\">\n        <Toggle text={'Use official words'} onToggle={() => setOfficialWords(!officialWords)} checked={officialWords} />\n        <button className=\"btn btn-blue\" onClick={newGame}>\n          New Game\n        </button>\n        <div className=\"self-center\">HomePage What</div>\n        {/* {boardMap && <span className=\"author\">- {boardMap}</span>} */}\n\n        <style jsx global>{`\n            @font-face {\n              font-family: 'Open Sans', sans-serif;\n              src: url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');\n              font-weight: bold;\n              font-style: normal;\n              font-display: swap;\n            }`\n\n        }\n        </style>\n      </main>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}