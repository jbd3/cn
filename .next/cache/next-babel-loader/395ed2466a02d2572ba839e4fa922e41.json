{"ast":null,"code":"var _jsxFileName = \"/Users/jakedouglas 1/development/nextJs/cn/components/BoardContainer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, Router } from 'next/router';\nimport { useState } from 'react';\nimport Board from './Board';\nimport Toggle from '../components/Toggle';\nimport ScoreBoard from '../components/ScoreBoard';\nimport Link from 'next/link';\nimport NewGameButton from './NewGameButton';\nimport Loader from './Loader';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _data, _data2, _data3, _data4;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var token = query.token;\n  var useSWRResponse = useSWR(\"/api/games?token=\".concat(token), fetcher, {\n    refreshInterval: 100\n  });\n  console.log();\n  var boardMap = (_data = data) === null || _data === void 0 ? void 0 : _data.boardMap;\n  var scoreBoard = (_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.scoreBoard;\n  var wordsList = (_data3 = data) === null || _data3 === void 0 ? void 0 : _data3.wordsList;\n  var version = (_data4 = data) === null || _data4 === void 0 ? void 0 : _data4.version;\n  var loading = !boardMap;\n  if (error) boardMap = 'Failed to fetch game data.';\n\n  var _useState = useState(false),\n      isCodeMaster = _useState[0],\n      setIsCodeMaster = _useState[1];\n\n  var revealCard = function revealCard(x, y) {\n    if (boardMap[x][y].team !== scoreBoard.turn) {\n      scoreBoard.turn = scoreBoard.turn === 1 ? 2 : 1;\n    }\n\n    if (boardMap[x][y].team === 3) {\n      scoreBoard.gameOver = true;\n    }\n\n    fetch('/api/games', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token: token,\n        x: x,\n        y: y\n      })\n    });\n  };\n\n  var copyToClipboard = function copyToClipboard() {\n    var el = document.createElement('textarea');\n    el.value = document.location.href;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  var cardsRemaining = {\n    red: 0,\n    blue: 0,\n    green: 0\n  };\n\n  if (Array.isArray(boardMap)) {\n    boardMap.forEach(function (row) {\n      row.forEach(function (card) {\n        if (card.team === 1 && !card.isRevealed) {\n          cardsRemaining.red++;\n        }\n\n        if (card.team === 2 && !card.isRevealed) {\n          cardsRemaining.blue++;\n        }\n\n        if (card.team === 4 && !card.isRevealed) {\n          cardsRemaining.green++;\n        }\n      });\n    });\n  }\n\n  if (typeof boardMap === 'string') Router.push('/404');\n  return __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"home-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"HOME\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(NewGameButton, {\n    solid: false,\n    setIsCodeMaster: setIsCodeMaster,\n    version: version,\n    wordsList: wordsList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))), version === 'undercover' ? __jsx(\"div\", {\n    className: \"game-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"CODENAMES: undercover\") : __jsx(\"div\", {\n    className: \"game-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"CODENAMES\"), loading && __jsx(\"div\", {\n    className: \"loader-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), Array.isArray(boardMap) && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"link-container\",\n    onClick: function onClick() {\n      return copyToClipboard();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-2 token-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"flex bg-gray-100 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\",\n    type: \"text\",\n    value: \"\".concat(token),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }), __jsx(\"button\", {\n    className: \"btn-teal\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Copy Link\")))), __jsx(\"div\", {\n    className: \"toggleContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(Toggle, {\n    text: \"Codemaster\",\n    onToggle: function onToggle() {\n      return setIsCodeMaster(!isCodeMaster);\n    },\n    checked: isCodeMaster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), __jsx(ScoreBoard, {\n    scoreBoard: scoreBoard,\n    cardsRemaining: cardsRemaining,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), __jsx(Board, {\n    boardMap: boardMap,\n    isCodeMaster: isCodeMaster,\n    revealCard: revealCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), __jsx(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"\\n        .game-title {\\n          font-family: futura;\\n          font-size: 45px;\\n          margin-top: 20px;\\n          align-self: center;\\n          color: white;\\n          text-align: center;\\n        }\\n        .scoreBoard {\\n          display: flex;\\n          align-content: space-between;\\n          align-self: center;\\n          border: 1px solid white;\\n          border-radius: 5px;\\n          padding: 10px;\\n          color: white;\\n          font-weight: 500;\\n        }\\n        .score {\\n          margin: 0 10px;\\n          color: white;\\n        }\\n        main {\\n          width: 100%;\\n          display: flex;\\n          flex-direction: column;\\n          justify-content: center;\\n        }\\n        .loader-container {\\n          justify-self: center;\\n          align-self: center;\\n        }\\n        .toggleContainer {\\n          width: 160px;\\n          align-self: center;\\n          margin: 20px 0;\\n        }\\n        .link-container {\\n          width: 98vw;\\n          max-width: 400px;\\n          align-self: center;\\n          font-size: 20px;\\n          margin: 20px 0;\\n        }\\n      \"));\n}","map":{"version":3,"sources":["/Users/jakedouglas 1/development/nextJs/cn/components/BoardContainer.js"],"names":["useSWR","fetch","useRouter","Router","useState","Board","Toggle","ScoreBoard","Link","NewGameButton","Loader","fetcher","url","then","r","json","Index","query","token","useSWRResponse","refreshInterval","console","log","boardMap","data","scoreBoard","wordsList","version","loading","error","isCodeMaster","setIsCodeMaster","revealCard","x","y","team","turn","gameOver","method","headers","body","JSON","stringify","copyToClipboard","el","document","createElement","value","location","href","appendChild","select","execCommand","removeChild","cardsRemaining","red","blue","green","Array","isArray","forEach","row","card","isRevealed","push"],"mappings":"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","sourcesContent":["import useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch'\nimport { useRouter, Router } from 'next/router';\nimport { useState } from 'react';\nimport Board from './Board';\nimport Toggle from '../components/Toggle';\nimport ScoreBoard from '../components/ScoreBoard';\nimport Link from 'next/link';\nimport NewGameButton from './NewGameButton';\nimport Loader from './Loader';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const { query } = useRouter();\n  const { token } = query;\n  const useSWRResponse = useSWR(`/api/games?token=${token}`, fetcher, { refreshInterval: 100 });\n  console.log();\n  let boardMap = data?.boardMap;\n  let scoreBoard = data?.scoreBoard;\n  let wordsList = data?.wordsList;\n  let version = data?.version;\n  const loading = !boardMap;\n  if (error) boardMap = 'Failed to fetch game data.';\n\n  const [isCodeMaster, setIsCodeMaster] = useState(false);\n\n  const revealCard = (x, y) => {\n    if (boardMap[x][y].team !== scoreBoard.turn) {\n      scoreBoard.turn = scoreBoard.turn === 1 ? 2 : 1;\n    }\n    if (boardMap[x][y].team === 3) {\n      scoreBoard.gameOver = true;\n    }\n    fetch('/api/games', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ token, x, y }),\n    })\n  }\n\n  const copyToClipboard = () => {\n    const el = document.createElement('textarea');\n    el.value = document.location.href;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  const cardsRemaining = {\n    red: 0,\n    blue: 0,\n    green: 0,\n  };\n  if (Array.isArray(boardMap)) {\n    boardMap.forEach(row => {\n      row.forEach(card => {\n        if (card.team === 1 && !card.isRevealed) {\n          cardsRemaining.red++\n        }\n        if (card.team === 2 && !card.isRevealed) {\n          cardsRemaining.blue++\n        }\n        if (card.team === 4 && !card.isRevealed) {\n          cardsRemaining.green++\n        }\n      })\n    })\n  }\n  if (typeof boardMap === 'string') Router.push('/404')\n\n  return (\n    <main>\n      <header>\n        <Link href='/'>\n          <div className=\"home-button\">\n            HOME\n          </div>\n        </Link>\n        <div>\n          <NewGameButton solid={false} setIsCodeMaster={setIsCodeMaster} version={version} wordsList={wordsList} />\n        </div>\n      </header>\n      {version === 'undercover'\n        ? <div className='game-title'>CODENAMES: undercover</div>\n        : <div className='game-title'>CODENAMES</div>\n      }\n      {loading && (\n        <div className=\"loader-container\">\n          <Loader />\n        </div>\n      )}\n      {Array.isArray(boardMap) && (<>\n        <div className=\"link-container\" onClick={() => copyToClipboard()}>\n          <div className=\"mb-2 token-form\">\n            <div className=\"flex bg-gray-100 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\n              <input className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" value={`${token}`} disabled />\n              <button className=\"btn-teal\" type=\"button\">\n                Copy Link\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className='toggleContainer'>\n          <Toggle text='Codemaster' onToggle={() => setIsCodeMaster(!isCodeMaster)} checked={isCodeMaster} />\n        </div>\n        <ScoreBoard scoreBoard={scoreBoard} cardsRemaining={cardsRemaining} />\n        <Board boardMap={boardMap} isCodeMaster={isCodeMaster} revealCard={revealCard} />\n      </>)}\n      <style>{`\n        .game-title {\n          font-family: futura;\n          font-size: 45px;\n          margin-top: 20px;\n          align-self: center;\n          color: white;\n          text-align: center;\n        }\n        .scoreBoard {\n          display: flex;\n          align-content: space-between;\n          align-self: center;\n          border: 1px solid white;\n          border-radius: 5px;\n          padding: 10px;\n          color: white;\n          font-weight: 500;\n        }\n        .score {\n          margin: 0 10px;\n          color: white;\n        }\n        main {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .loader-container {\n          justify-self: center;\n          align-self: center;\n        }\n        .toggleContainer {\n          width: 160px;\n          align-self: center;\n          margin: 20px 0;\n        }\n        .link-container {\n          width: 98vw;\n          max-width: 400px;\n          align-self: center;\n          font-size: 20px;\n          margin: 20px 0;\n        }\n      `}</style>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}