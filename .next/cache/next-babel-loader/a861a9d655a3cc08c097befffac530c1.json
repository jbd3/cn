{"ast":null,"code":"var _jsxFileName = \"/Users/jakedouglas 1/development/nextJs/cn/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Toggle from '../components/Toggle';\nimport randomWords from 'random-words';\nimport Router from 'next/router';\nimport { useState } from 'react';\nexport default function Index({\n  newGame\n}) {\n  const {\n    0: officialWords,\n    1: setOfficialWords\n  } = useState(true); // const newGame = ({ firstPlayer = null, officialWords = true }) => {\n  //   const randomInt = (min, max) => {\n  //     return Math.round(min + (Math.random() * (max - min)));\n  //   };\n  //   const token = `${randomWords()}-${randomWords()}-${randomInt(100, 999)}`;\n  //   fetch('/api/games', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       token,\n  //       officialWords,\n  //     }),\n  //   })\n  //     .then(res => {\n  //       console.log('response: ', res);\n  //       res.json()\n  //     })\n  //     .then((data) => data)\n  //     .then(() => Router.push(`/game?token=${token}`))\n  //     .catch(err => console.error('Error adding new game'))\n  // }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"main\", {\n    className: \"jsx-461382001\" + \" \" + \"self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Toggle, {\n    text: 'Use official words',\n    onToggle: () => setOfficialWords(!officialWords),\n    checked: officialWords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: newGame,\n    className: \"jsx-461382001\" + \" \" + \"btn btn-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"New Game\"), __jsx(\"div\", {\n    className: \"jsx-461382001\" + \" \" + \"self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"HomePage What\"), __jsx(_JSXStyle, {\n    id: \"461382001\",\n    __self: this\n  }, \"@font-face{font-family:'Open Sans',sans-serif;src:url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');font-weight:bold;font-style:normal;font-display:swap;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWtlZG91Z2xhcyAxL2RldmVsb3BtZW50L25leHRKcy9jbi9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QzJCLEFBR21ELG1DQUNzQywwRUFDekQsaUJBQ0Msa0JBQ0Esa0JBQ3BCIiwiZmlsZSI6Ii9Vc2Vycy9qYWtlZG91Z2xhcyAxL2RldmVsb3BtZW50L25leHRKcy9jbi9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCdcbmltcG9ydCBUb2dnbGUgZnJvbSAnLi4vY29tcG9uZW50cy9Ub2dnbGUnXG5pbXBvcnQgcmFuZG9tV29yZHMgZnJvbSAncmFuZG9tLXdvcmRzJztcbmltcG9ydCBSb3V0ZXIgZnJvbSAnbmV4dC9yb3V0ZXInXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoeyBuZXdHYW1lIH0pIHtcblxuICBjb25zdCBbb2ZmaWNpYWxXb3Jkcywgc2V0T2ZmaWNpYWxXb3Jkc10gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICAvLyBjb25zdCBuZXdHYW1lID0gKHsgZmlyc3RQbGF5ZXIgPSBudWxsLCBvZmZpY2lhbFdvcmRzID0gdHJ1ZSB9KSA9PiB7XG4gIC8vICAgY29uc3QgcmFuZG9tSW50ID0gKG1pbiwgbWF4KSA9PiB7XG4gIC8vICAgICByZXR1cm4gTWF0aC5yb3VuZChtaW4gKyAoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pKSk7XG4gIC8vICAgfTtcbiAgLy8gICBjb25zdCB0b2tlbiA9IGAke3JhbmRvbVdvcmRzKCl9LSR7cmFuZG9tV29yZHMoKX0tJHtyYW5kb21JbnQoMTAwLCA5OTkpfWA7XG4gIC8vICAgZmV0Y2goJy9hcGkvZ2FtZXMnLCB7XG4gIC8vICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgLy8gICAgIGhlYWRlcnM6IHtcbiAgLy8gICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgLy8gICAgICAgdG9rZW4sXG4gIC8vICAgICAgIG9mZmljaWFsV29yZHMsXG4gIC8vICAgICB9KSxcbiAgLy8gICB9KVxuICAvLyAgICAgLnRoZW4ocmVzID0+IHtcbiAgLy8gICAgICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlOiAnLCByZXMpO1xuICAvLyAgICAgICByZXMuanNvbigpXG4gIC8vICAgICB9KVxuICAvLyAgICAgLnRoZW4oKGRhdGEpID0+IGRhdGEpXG4gIC8vICAgICAudGhlbigoKSA9PiBSb3V0ZXIucHVzaChgL2dhbWU/dG9rZW49JHt0b2tlbn1gKSlcbiAgLy8gICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcignRXJyb3IgYWRkaW5nIG5ldyBnYW1lJykpXG4gIC8vIH1cbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPG1haW4gY2xhc3NOYW1lPVwic2VsZi1jZW50ZXJcIj5cbiAgICAgICAgPFRvZ2dsZSB0ZXh0PXsnVXNlIG9mZmljaWFsIHdvcmRzJ30gb25Ub2dnbGU9eygpID0+IHNldE9mZmljaWFsV29yZHMoIW9mZmljaWFsV29yZHMpfSBjaGVja2VkPXtvZmZpY2lhbFdvcmRzfSAvPlxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tYmx1ZVwiIG9uQ2xpY2s9e25ld0dhbWV9PlxuICAgICAgICAgIE5ldyBHYW1lXG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNlbGYtY2VudGVyXCI+SG9tZVBhZ2UgV2hhdDwvZGl2PlxuICAgICAgICB7Lyoge2JvYXJkTWFwICYmIDxzcGFuIGNsYXNzTmFtZT1cImF1dGhvclwiPi0ge2JvYXJkTWFwfTwvc3Bhbj59ICovfVxuXG4gICAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgICAgICBAZm9udC1mYWNlIHtcbiAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgICBzcmM6IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2FucyZkaXNwbGF5PXN3YXAnKTtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgICAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICAgICAgICAgICAgfWBcblxuICAgICAgICB9XG4gICAgICAgIDwvc3R5bGU+XG4gICAgICA8L21haW4+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/Users/jakedouglas 1/development/nextJs/cn/pages/index.js */\")));\n}","map":{"version":3,"sources":["/Users/jakedouglas 1/development/nextJs/cn/pages/index.js"],"names":["Layout","Toggle","randomWords","Router","useState","Index","newGame","officialWords","setOfficialWords"],"mappings":";;;;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA4B;AAEzC,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCJ,QAAQ,CAAC,IAAD,CAAlD,CAFyC,CAIzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,uCAAgB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,oBAAd;AAAoC,IAAA,QAAQ,EAAE,MAAMI,gBAAgB,CAAC,CAACD,aAAF,CAApE;AAAsF,IAAA,OAAO,EAAEA,aAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAiC,IAAA,OAAO,EAAED,OAA1C;AAAA,uCAAkB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKE;AAAA,uCAAe,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF;AAAA;AAAA;AAAA,woGADF,CADF;AAwBD","sourcesContent":["\nimport Layout from '../components/Layout'\nimport Toggle from '../components/Toggle'\nimport randomWords from 'random-words';\nimport Router from 'next/router'\nimport { useState } from 'react';\n\nexport default function Index({ newGame }) {\n\n  const [officialWords, setOfficialWords] = useState(true);\n\n  // const newGame = ({ firstPlayer = null, officialWords = true }) => {\n  //   const randomInt = (min, max) => {\n  //     return Math.round(min + (Math.random() * (max - min)));\n  //   };\n  //   const token = `${randomWords()}-${randomWords()}-${randomInt(100, 999)}`;\n  //   fetch('/api/games', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       token,\n  //       officialWords,\n  //     }),\n  //   })\n  //     .then(res => {\n  //       console.log('response: ', res);\n  //       res.json()\n  //     })\n  //     .then((data) => data)\n  //     .then(() => Router.push(`/game?token=${token}`))\n  //     .catch(err => console.error('Error adding new game'))\n  // }\n  return (\n    <Layout>\n      <main className=\"self-center\">\n        <Toggle text={'Use official words'} onToggle={() => setOfficialWords(!officialWords)} checked={officialWords} />\n        <button className=\"btn btn-blue\" onClick={newGame}>\n          New Game\n        </button>\n        <div className=\"self-center\">HomePage What</div>\n        {/* {boardMap && <span className=\"author\">- {boardMap}</span>} */}\n\n        <style jsx global>{`\n            @font-face {\n              font-family: 'Open Sans', sans-serif;\n              src: url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');\n              font-weight: bold;\n              font-style: normal;\n              font-display: swap;\n            }`\n\n        }\n        </style>\n      </main>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}