{"version":3,"file":"static/webpack/static/development/pages/game.js.3eaf05fdbc41676dd9aa.hot-update.js","sources":["webpack:///./components/BoardContainer.js"],"sourcesContent":["import useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch'\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport Board from './Board';\nimport Toggle from '../components/Toggle'\nimport ScoreBoard from '../components/ScoreBoard'\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const { query } = useRouter();\n  const { token } = query;\n  const { data, error } = useSWR(`/api/games?token=${token}`, fetcher, { refreshInterval: 100 });\n  let boardMap = data?.boardMap;\n  let scoreBoard = data?.scoreBoard;\n  const loading = !boardMap;\n  if (error) boardMap = 'Failed to fetch game data.';\n\n  const [isCodeMaster, setIsCodeMaster] = useState(false);\n\n  const copyToClipboard = () => {\n    const el = document.createElement('textarea');\n    el.value = document.location.href;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  const cardsRemaining = {\n    red: 0,\n    blue: 0,\n  };\n  if (boardMap?.length) {\n    boardMap.forEach(row => {\n      row.forEach(card => {\n        if (card.team === 1 && !card.isRevealed) {\n          cardsRemaining.red++\n        }\n        if (card.team === 2 && !card.isRevealed) {\n          cardsRemaining.blue++\n        }\n      })\n    })\n  }\n\n  const revealCard = (x, y) => {\n    if (boardMap[x][y].team !== scoreBoard.turn) {\n      scoreBoard.turn = scoreBoard.turn === 1 ? 2 : 1;\n    }\n    if (boardMap[x][y].team === 3) {\n      scoreBoard.gameOver = true;\n    }\n    fetch('/api/games', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ token, x, y }),\n    })\n  }\n\n\n  return (\n    <main>\n      <div className='game-title'>CODENAMES</div>\n      {loading && \"Loading...\"}\n      {boardMap && (<>\n        <div className=\"link-container\" onClick={() => copyToClipboard()}>\n          <div className=\"mb-2 token-form\">\n            <div className=\"flex bg-gray-100 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\n              <input className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" value={`${document.location.href}`} disabled />\n              <button className=\"btn-teal\" type=\"button\">\n                Copy Link\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className='toggleContainer'>\n          <Toggle text='Codemaster' onToggle={() => setIsCodeMaster(!isCodeMaster)} checked={isCodeMaster} />\n        </div>\n        <ScoreBoard scoreBoard={scoreBoard} cardsRemaining={cardsRemaining} />\n        <Board boardMap={boardMap} isCodeMaster={isCodeMaster} revealCard={revealCard} />\n      </>)}\n      <style>{`\n        .game-title {\n          font-family: futura;\n          font-size: 45px;\n          margin-top: 20px;\n          align-self: center;\n          color: white;\n        }\n        .scoreBoard {\n          display: flex;\n          align-content: space-between;\n          align-self: center;\n          border: 1px solid white;\n          border-radius: 5px;\n          padding: 10px;\n          color: white;\n          font-weight: 500;\n        }\n        .score {\n          margin: 0 10px;\n          color: white;\n        }\n        main {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .toggleContainer {\n          width: 160px;\n          align-self: center;\n          margin: 20px 0;\n        }\n        .link-container {\n          width: 98vw;\n          max-width: 400px;\n          align-self: center;\n          font-size: 10px;\n          margin: 20px 0;\n        }\n      `}</style>\n    </main>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;;;;A","sourceRoot":""}